# Generated by Selenium IDE
import pytest
import time
import json
import sys
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

class TestCrearexpediente():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    #time.sleep(10)
    #wait = WebDriverWait(self.driver, 10)
    #element = wait.until(EC.visibility_of_element_located((By.ID, 'someid')))

    self.driver.quit()
    
  ##Logearse como secretaria
  def login(self):
    self.driver.get("http://localhost:8000/login/")
    self.driver.set_window_size(1366, 728)
    username = self.driver.find_element(By.NAME,"usuario")
    username.send_keys("secretaria@gmail.com")
    password = self.driver.find_element(By.NAME,"password")
    password.send_keys("secretaria1")
    # Locate login button and click on it
    self.driver.find_element(By.XPATH,"//button[@type='submit']").click()
  
  def test_crearexpediente(self):
    #Acceder al sistema
    self.login()
    #Ingresar los datos
    self.driver.find_element(By.ID, "buscar-nombre").click()
    self.driver.find_element(By.ID, "id_nombre_paciente").click()
    self.driver.find_element(By.ID, "id_nombre_paciente").send_keys("n2")
    self.driver.find_element(By.ID, "id_apellido_paciente").send_keys("n2")
    self.driver.find_element(By.ID, "id_fecha_nacimiento_paciente").send_keys("31-01-1973")
    dropdown = self.driver.find_element(By.ID, "id_sexo_paciente")
    dropdown.find_element(By.XPATH, "//option[. = 'Femenino']").click()
    element = self.driver.find_element(By.ID, "id_sexo_paciente")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "id_sexo_paciente")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "id_sexo_paciente")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.ID, "id_direccion_paciente").click()
    self.driver.find_element(By.ID, "id_direccion_paciente").send_keys("San salvador")
    self.driver.find_element(By.ID, "id_email_paciente").click()
    self.driver.find_element(By.ID, "id_email_paciente").send_keys("n2@gmail.com")
    self.driver.find_element(By.ID, "id_dui").click()
    self.driver.find_element(By.ID, "id_dui").send_keys("33088876-9")
    self.driver.find_element(By.ID, "id_pasaporte").click()
    self.driver.find_element(By.ID, "id_numero_telefono").click()
    self.driver.find_element(By.ID, "id_numero_telefono").send_keys("70738071")
    #Enviar los datos
    self.driver.find_element(By.CSS_SELECTOR, ".btn-outline-primary").click()

    #Interpretar los resultados
    try:
      print("---------------------------------")
      print(WebDriverWait(self.driver,10).until(EC.presence_of_element_located((By.CSS_SELECTOR,"#toast-container .toast .toast-message"))).text)
      print("---------------------------------")

    except:
      print("Error")

    time.sleep(10)
  
#Ejecutar la clase Test.
testClass = TestCrearexpediente()
testClass.setup_method("")
testClass.test_crearexpediente()
testClass.teardown_method("")